package saker.build.ide.intellij.impl.properties;

import com.intellij.openapi.ui.ComboBox;
import com.intellij.ui.IdeBorderFactory;
import com.intellij.ui.components.JBLabel;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import saker.build.ide.support.ui.ExceptionFormatSelector;
import saker.build.thirdparty.saker.util.ObjectUtils;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JPanel;
import java.awt.Insets;

public class ApplicationConfigurationForm {
    private SakerBuildApplicationConfigurable configurable;
    private JPanel rootPanel;
    private JPanel exceptionFormatPanel;
    private ComboBox<String> exceptionFormatComboBox;

    private ExceptionFormatSelector formatSelector = new ExceptionFormatSelector(null);

    public ApplicationConfigurationForm(SakerBuildApplicationConfigurable configurable) {
        this.configurable = configurable;

        exceptionFormatPanel.setBorder(IdeBorderFactory.createTitledBorder("Exception format", true));

        exceptionFormatComboBox.addItemListener(e -> {
            formatSelector.setSelectedIndex(exceptionFormatComboBox.getSelectedIndex());
            configurable.getBuilder().setExceptionFormat(formatSelector.getSelectedFormat());
        });
    }

    public void reset() {
        formatSelector.reset(configurable.getProperties());
        updateFormatComboBox();
    }

    private void updateFormatComboBox() {
        exceptionFormatComboBox.setModel(
                new DefaultComboBoxModel<>(formatSelector.getLabels().toArray(ObjectUtils.EMPTY_STRING_ARRAY)));
        exceptionFormatComboBox.setSelectedIndex(formatSelector.getSelectedIndex());
    }

    public JPanel getRootPanel() {
        return rootPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        exceptionFormatPanel = new JPanel();
        exceptionFormatPanel.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        rootPanel.add(exceptionFormatPanel,
                new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
                        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null,
                        0, false));
        final JBLabel jBLabel1 = new JBLabel();
        jBLabel1.setText("Build exception display format:");
        exceptionFormatPanel.add(jBLabel1,
                new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
                        GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
                        false));
        final Spacer spacer1 = new Spacer();
        exceptionFormatPanel.add(spacer1,
                new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1,
                        GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        exceptionFormatComboBox = new ComboBox();
        exceptionFormatPanel.add(exceptionFormatComboBox,
                new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL,
                        GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0,
                        false));
        final Spacer spacer2 = new Spacer();
        exceptionFormatPanel.add(spacer2,
                new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL,
                        GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JBLabel jBLabel2 = new JBLabel();
        jBLabel2.setText("General settings for the saker.build plugin.");
        rootPanel.add(jBLabel2,
                new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH,
                        GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null,
                        null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

}
